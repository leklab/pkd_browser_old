from pprint import pprint

import hail
import time
from hail.expr import TInt, TFloat
from hail import VariantDataset

from hail_scripts.v01.utils.vds_schema_string_utils import parse_field_names_and_types
from hail_scripts.v01.utils.vds_utils import write_vds

hail_context = hail.HailContext(log="./hail_{}.log".format(time.strftime("%y%m%d_%H%M%S")))

DBNSFP_FIELDS = {
    "2.9.3": {
        "source_path": "gs://seqr-reference-data/GRCh37/dbNSFP/v2.9.3/dbNSFP2.9.3_variant.chr*.gz",
        "output_path": "gs://seqr-reference-data/GRCh37/dbNSFP/v2.9.3/dbNSFP2.9.3_variant.vds"
    },
    "3.5": {
        "source_path": "gs://seqr-reference-data/GRCh38/dbNSFP/v3.5/dbNSFP3.5a_variant.chr*.gz",
        "output_path": "gs://seqr-reference-data/GRCh38/dbNSFP/v3.5/dbNSFP3.5a_variant.vds",
    },
}

DBNSFP_FIELDS["2.9.3"]["fields"] = """
         `#chr`: String,
         `pos(1-coor)`: Int,
         ref: String,
         alt: String,
         --- aaref: String,
         --- aaalt: String,
         --- rs_dbSNP147: String,
         --- `hg18_pos(1-coor)`: String,
         --- hg38_chr: String,
         --- hg38_pos: String,
         --- genename: String,
         --- Uniprot_acc: String,
         --- Uniprot_id: String,
         --- Uniprot_aapos: String,
         --- Interpro_domain: String,
         --- cds_strand: String,
         --- refcodon: String,
         --- `SLR_test_statistic `: String,
         --- codonpos: String,
         --- `fold-degenerate`: String,
         --- Ancestral_allele: String,
         --- Ensembl_geneid: String,
         --- Ensembl_transcriptid: String,
         --- aapos: String,
         --- aapos_SIFT: String,
         --- aapos_FATHMM: String,
         --- SIFT_score: Float,
         --- SIFT_converted_rankscore: String,
         SIFT_pred: String,
         --- Polyphen2_HDIV_score: String,
         --- Polyphen2_HDIV_rankscore: String,
         Polyphen2_HDIV_pred: String,
         --- Polyphen2_HVAR_score: String,
         --- Polyphen2_HVAR_rankscore: String,
         Polyphen2_HVAR_pred: String,
         --- LRT_score: String,
         --- LRT_converted_rankscore: String,
         LRT_pred: String,
         --- MutationTaster_score: String,
         --- MutationTaster_converted_rankscore: String,
         MutationTaster_pred: String,
         --- MutationAssessor_score: String,
         --- MutationAssessor_rankscore: String,
         MutationAssessor_pred: String,
         --- FATHMM_score: String,
         --- FATHMM_rankscore: String,
         FATHMM_pred: String,
         --- MetaSVM_score: String,
         --- MetaSVM_rankscore: String,
         MetaSVM_pred: String,
         --- MetaLR_score: String,
         --- MetaLR_rankscore: String,
         MetaLR_pred: String,
         --- Reliability_index: String,
         VEST3_score: String,
         VEST3_rankscore: String,
         --- PROVEAN_score: String,
         --- PROVEAN_converted_rankscore: String,
         PROVEAN_pred: String,
         --- `M-CAP_score`: String,
         --- `M-CAP_rankscore`: String,
         `M-CAP_pred`: String,
         REVEL_score: String,
         REVEL_rankscore: String,
         --- MutPred_score: String,
         --- MutPred_rankscore: String,
         --- MutPred_protID: String,
         --- MutPred_AAchange: String,
         MutPred_Top5features: String,
         --- Eigen_coding_or_noncoding: String,
         --- `Eigen-raw`: String,
         `Eigen-phred`: String,
         --- `Eigen-PC-raw`: String,
         `Eigen-PC-phred`: String,
         --- `Eigen-PC-raw_rankscore`: String,
         --- CADD_raw: Double,
         --- CADD_raw_rankscore: Double,
         --- CADD_phred: Double,
         --- `GERP++_NR`: String,
         `GERP++_RS`: String,
         `GERP++_RS_rankscore`: String,
         phyloP46way_primate: String,
         phyloP46way_primate_rankscore: String,
         phyloP46way_placental: String,
         phyloP46way_placental_rankscore: String,
         phyloP100way_vertebrate: String,
         phyloP100way_vertebrate_rankscore: String,
         phastCons46way_primate: String,
         phastCons46way_primate_rankscore: String,
         phastCons46way_placental: String,
         phastCons46way_placental_rankscore: String,
         phastCons100way_vertebrate: String,
         phastCons100way_vertebrate_rankscore: String,
         SiPhy_29way_pi: String,
         --- SiPhy_29way_logOdds: String,
         SiPhy_29way_logOdds_rankscore: String,
         --- LRT_Omega: String,
         --- UniSNP_ids: String,
         --- `1000Gp1_AC`: String,
         --- `1000Gp1_AF`: String,
         --- `1000Gp1_AFR_AC`: String,
         --- `1000Gp1_AFR_AF`: String,
         --- `1000Gp1_EUR_AC`: String,
         --- `1000Gp1_EUR_AF`: String,
         --- `1000Gp1_AMR_AC`: String,
         --- `1000Gp1_AMR_AF`: String,
         --- `1000Gp1_ASN_AC`: String,
         --- `1000Gp1_ASN_AF`: String,
         ESP6500_AA_AF: Float,
         `ESP6500_EA_AF `: Float,
         ARIC5606_AA_AC: Int,
         ARIC5606_AA_AF: Float,
         ARIC5606_EA_AC: Int,
         ARIC5606_EA_AF: Float,
         --- ExAC_AC: String,
         --- ExAC_AF: String,
         --- ExAC_Adj_AC: String,
         --- ExAC_Adj_AF: String,
         --- ExAC_AFR_AC: String,
         --- ExAC_AFR_AF: String,
         --- ExAC_AMR_AC: String,
         --- ExAC_AMR_AF: String,
         --- ExAC_EAS_AC: String,
         --- ExAC_EAS_AF: String,
         --- ExAC_FIN_AC: String,
         --- ExAC_FIN_AF: String,
         --- ExAC_NFE_AC: String,
         --- ExAC_NFE_AF: String,
         --- ExAC_SAS_AC: String,
         --- ExAC_SAS_AF: String,
         --- clinvar_rs: String,
         --- clinvar_clnsig: String,
         --- clinvar_trait: String,
         --- clinvar_golden_stars: String,
         --- COSMIC_ID: String,
         --- `COSMIC_CNT `: String,
        """


DBNSFP_FIELDS["3.5"]["fields"] = """
        `#chr`: String,
         `pos(1-based)`: String,
         ref: String,
         alt: String,
         --- aaref: String,
         --- aaalt: String,
         --- rs_dbSNP150: String,
         --- hg19_chr: String,
         --- `hg19_pos(1-based)`: String,
         --- hg18_chr: String,
         --- `hg18_pos(1-based)`: String,
         --- genename: String,
         --- cds_strand: String,
         --- refcodon: String,
         --- codonpos: String,
         --- codon_degeneracy: String,
         --- Ancestral_allele: String,
         --- AltaiNeandertal: String,
         --- Denisova: String,
         --- Ensembl_geneid: String,
         --- Ensembl_transcriptid: String,
         --- Ensembl_proteinid: String,
         --- aapos: String,
         --- SIFT_score: String,
         --- SIFT_converted_rankscore: String,
         SIFT_pred: String,
         --- Uniprot_acc_Polyphen2: String,
         --- Uniprot_id_Polyphen2: String,
         --- Uniprot_aapos_Polyphen2: String,
         --- Polyphen2_HDIV_score: String,
         --- Polyphen2_HDIV_rankscore: String,
         Polyphen2_HDIV_pred: String,
         --- Polyphen2_HVAR_score: String,
         --- Polyphen2_HVAR_rankscore: String,
         Polyphen2_HVAR_pred: String,
         --- LRT_score: String,
         --- LRT_converted_rankscore: String,
         LRT_pred: String,
         --- LRT_Omega: String,
         --- MutationTaster_score: String,
         --- MutationTaster_converted_rankscore: String,
         MutationTaster_pred: String,
         --- MutationTaster_model: String,
         --- MutationTaster_AAE: String,
         --- MutationAssessor_UniprotID: String,
         --- MutationAssessor_variant: String,
         --- MutationAssessor_score: String,
         --- MutationAssessor_score_rankscore: String,
         MutationAssessor_pred: String,
         --- FATHMM_score: String,
         --- FATHMM_converted_rankscore: String,
         FATHMM_pred: String,
         --- PROVEAN_score: String,
         --- PROVEAN_converted_rankscore: String,
         PROVEAN_pred: String,
         --- Transcript_id_VEST3: String,
         --- Transcript_var_VEST3: String,
         VEST3_score: String,
         VEST3_rankscore: String,
         --- MetaSVM_score: String,
         --- MetaSVM_rankscore: String,
         MetaSVM_pred: String,
         --- MetaLR_score: String,
         --- MetaLR_rankscore: String,
         MetaLR_pred: String,
         --- Reliability_index: String,
         --- `M-CAP_score`: String,
         --- `M-CAP_rankscore`: String,
         `M-CAP_pred`: String,
         REVEL_score: String,
         REVEL_rankscore: String,
         --- MutPred_score: String,
         --- MutPred_rankscore: String,
         --- MutPred_protID: String,
         --- MutPred_AAchange: String,
         MutPred_Top5features: String,
         --- CADD_raw: String,
         --- CADD_raw_rankscore: String,
         --- CADD_phred: String,
         DANN_score: String,
         DANN_rankscore: String,
         --- `fathmm-MKL_coding_score`: String,
         --- `fathmm-MKL_coding_rankscore`: String,
         `fathmm-MKL_coding_pred`: String,
         --- `fathmm-MKL_coding_group`: String,
         --- Eigen_coding_or_noncoding: String,
         --- `Eigen-raw`: String,
         `Eigen-phred`: String,
         --- `Eigen-PC-raw`: String,
         `Eigen-PC-phred`: String,
         --- `Eigen-PC-raw_rankscore`: String,
         GenoCanyon_score: String,
         GenoCanyon_score_rankscore: String,
         integrated_fitCons_score: String,
         integrated_fitCons_score_rankscore: String,
         integrated_confidence_value: String,
         GM12878_fitCons_score: String,
         GM12878_fitCons_score_rankscore: String,
         GM12878_confidence_value: String,
         `H1-hESC_fitCons_score`: String,
         `H1-hESC_fitCons_score_rankscore`: String,
         `H1-hESC_confidence_value`: String,
         HUVEC_fitCons_score: String,
         HUVEC_fitCons_score_rankscore: String,
         HUVEC_confidence_value: String,
         --- `GERP++_NR`: String,
         `GERP++_RS`: String,
         `GERP++_RS_rankscore`: String,
         phyloP100way_vertebrate: String,
         phyloP100way_vertebrate_rankscore: String,
         phyloP20way_mammalian: String,
         phyloP20way_mammalian_rankscore: String,
         phastCons100way_vertebrate: String,
         phastCons100way_vertebrate_rankscore: String,
         phastCons20way_mammalian: String,
         phastCons20way_mammalian_rankscore: String,
         SiPhy_29way_pi: String,
         --- SiPhy_29way_logOdds: String,
         SiPhy_29way_logOdds_rankscore: String,
         --- `1000Gp3_AC`: String,
         --- `1000Gp3_AF`: String,
         --- `1000Gp3_AFR_AC`: String,
         --- `1000Gp3_AFR_AF`: String,
         --- `1000Gp3_EUR_AC`: String,
         --- `1000Gp3_EUR_AF`: String,
         --- `1000Gp3_AMR_AC`: String,
         --- `1000Gp3_AMR_AF`: String,
         --- `1000Gp3_EAS_AC`: String,
         --- `1000Gp3_EAS_AF`: String,
         --- `1000Gp3_SAS_AC`: String,
         --- `1000Gp3_SAS_AF`: String,
         TWINSUK_AC: String,
         TWINSUK_AF: String,
         ALSPAC_AC: String,
         ALSPAC_AF: String,
         ESP6500_AA_AC: String,
         ESP6500_AA_AF: String,
         ESP6500_EA_AC: String,
         ESP6500_EA_AF: String,
         --- ExAC_AC: String,
         --- ExAC_AF: String,
         --- ExAC_Adj_AC: String,
         --- ExAC_Adj_AF: String,
         --- ExAC_AFR_AC: String,
         --- ExAC_AFR_AF: String,
         --- ExAC_AMR_AC: String,
         --- ExAC_AMR_AF: String,
         --- ExAC_EAS_AC: String,
         --- ExAC_EAS_AF: String,
         --- ExAC_FIN_AC: String,
         --- ExAC_FIN_AF: String,
         --- ExAC_NFE_AC: String,
         --- ExAC_NFE_AF: String,
         --- ExAC_SAS_AC: String,
         --- ExAC_SAS_AF: String,
         --- ExAC_nonTCGA_AC: String,
         --- ExAC_nonTCGA_AF: String,
         --- ExAC_nonTCGA_Adj_AC: String,
         --- ExAC_nonTCGA_Adj_AF: String,
         --- ExAC_nonTCGA_AFR_AC: String,
         --- ExAC_nonTCGA_AFR_AF: String,
         --- ExAC_nonTCGA_AMR_AC: String,
         --- ExAC_nonTCGA_AMR_AF: String,
         --- ExAC_nonTCGA_EAS_AC: String,
         --- ExAC_nonTCGA_EAS_AF: String,
         --- ExAC_nonTCGA_FIN_AC: String,
         --- ExAC_nonTCGA_FIN_AF: String,
         --- ExAC_nonTCGA_NFE_AC: String,
         --- ExAC_nonTCGA_NFE_AF: String,
         --- ExAC_nonTCGA_SAS_AC: String,
         --- ExAC_nonTCGA_SAS_AF: String,
         --- ExAC_nonpsych_AC: String,
         --- ExAC_nonpsych_AF: String,
         --- ExAC_nonpsych_Adj_AC: String,
         --- ExAC_nonpsych_Adj_AF: String,
         --- ExAC_nonpsych_AFR_AC: String,
         --- ExAC_nonpsych_AFR_AF: String,
         --- ExAC_nonpsych_AMR_AC: String,
         --- ExAC_nonpsych_AMR_AF: String,
         --- ExAC_nonpsych_EAS_AC: String,
         --- ExAC_nonpsych_EAS_AF: String,
         --- ExAC_nonpsych_FIN_AC: String,
         --- ExAC_nonpsych_FIN_AF: String,
         --- ExAC_nonpsych_NFE_AC: String,
         --- ExAC_nonpsych_NFE_AF: String,
         --- ExAC_nonpsych_SAS_AC: String,
         --- ExAC_nonpsych_SAS_AF: String,
         --- gnomAD_exomes_AC: String,
         --- gnomAD_exomes_AN: String,
         --- gnomAD_exomes_AF: String,
         --- gnomAD_exomes_AFR_AC: String,
         --- gnomAD_exomes_AFR_AN: String,
         --- gnomAD_exomes_AFR_AF: String,
         --- gnomAD_exomes_AMR_AC: String,
         --- gnomAD_exomes_AMR_AN: String,
         --- gnomAD_exomes_AMR_AF: String,
         --- gnomAD_exomes_ASJ_AC: String,
         --- gnomAD_exomes_ASJ_AN: String,
         --- gnomAD_exomes_ASJ_AF: String,
         --- gnomAD_exomes_EAS_AC: String,
         --- gnomAD_exomes_EAS_AN: String,
         --- gnomAD_exomes_EAS_AF: String,
         --- gnomAD_exomes_FIN_AC: String,
         --- gnomAD_exomes_FIN_AN: String,
         --- gnomAD_exomes_FIN_AF: String,
         --- gnomAD_exomes_NFE_AC: String,
         --- gnomAD_exomes_NFE_AN: String,
         --- gnomAD_exomes_NFE_AF: String,
         --- gnomAD_exomes_SAS_AC: String,
         --- gnomAD_exomes_SAS_AN: String,
         --- gnomAD_exomes_SAS_AF: String,
         --- gnomAD_exomes_OTH_AC: String,
         --- gnomAD_exomes_OTH_AN: String,
         --- gnomAD_exomes_OTH_AF: String,
         --- gnomAD_genomes_AC: String,
         --- gnomAD_genomes_AN: String,
         --- gnomAD_genomes_AF: String,
         --- gnomAD_genomes_AFR_AC: String,
         --- gnomAD_genomes_AFR_AN: String,
         --- gnomAD_genomes_AFR_AF: String,
         --- gnomAD_genomes_AMR_AC: String,
         --- gnomAD_genomes_AMR_AN: String,
         --- gnomAD_genomes_AMR_AF: String,
         --- gnomAD_genomes_ASJ_AC: String,
         --- gnomAD_genomes_ASJ_AN: String,
         --- gnomAD_genomes_ASJ_AF: String,
         --- gnomAD_genomes_EAS_AC: String,
         --- gnomAD_genomes_EAS_AN: String,
         --- gnomAD_genomes_EAS_AF: String,
         --- gnomAD_genomes_FIN_AC: String,
         --- gnomAD_genomes_FIN_AN: String,
         --- gnomAD_genomes_FIN_AF: String,
         --- gnomAD_genomes_NFE_AC: String,
         --- gnomAD_genomes_NFE_AN: String,
         --- gnomAD_genomes_NFE_AF: String,
         --- gnomAD_genomes_OTH_AC: String,
         --- gnomAD_genomes_OTH_AN: String,
         --- gnomAD_genomes_OTH_AF: String,
         --- clinvar_rs: String,
         --- clinvar_clnsig: String,
         --- clinvar_trait: String,
         --- clinvar_golden_stars: String,
         Interpro_domain: String,
         GTEx_V6p_gene: String,
         GTEx_V6p_tissue: String
    """

DBNSFP_FIELDS["2.9.3"]["field_types"] = {
    'pos(1-coor)': TInt(),
    'TWINSUK_AC': TInt(),
    'TWINSUK_AF': TFloat(),
    'ESP6500_AA_AF': TFloat(),
    'ESP6500_EA_AF': TFloat(),
}

DBNSFP_FIELDS["3.5"]["field_types"] = {
    'pos(1-based)': TInt(),
    'TWINSUK_AC': TInt(),
    'TWINSUK_AF': TFloat(),
    'ALSPAC_AC': TInt(),
    'ALSPAC_AF': TFloat(),
    'ESP6500_AA_AC': TInt(),
    'ESP6500_AA_AF': TFloat(),
    'ESP6500_EA_AC': TInt(),
    'ESP6500_EA_AF': TFloat(),
}

#DBNSFP_FIELDS["2.9.3"]["pos_field"] = '`pos(1-coor)`'
#DBNSFP_FIELDS["3.5"]["pos_field"] = '`pos(1-based)`'


for dbnsfp_version in DBNSFP_FIELDS:
    DBNSFP_FIELDS[dbnsfp_version]["fields_to_keep"] = [name for name, _ in parse_field_names_and_types(DBNSFP_FIELDS[dbnsfp_version]["fields"], to_keep=True)]
    DBNSFP_FIELDS[dbnsfp_version]["fields_to_drop"] = [name for name, _ in parse_field_names_and_types(DBNSFP_FIELDS[dbnsfp_version]["fields"], to_keep=False)]
    DBNSFP_FIELDS[dbnsfp_version]["rename_fields"] = {
        field_name.replace("`", ""): field_name.strip(" `#").replace("(1-coor)", "").replace("(1-based)", "").replace("-", "_").replace("+", "")
        for field_name, field_type in parse_field_names_and_types(DBNSFP_FIELDS[dbnsfp_version]["fields"], to_keep=True)
    }

for genome_version in ["37", "38"]:
    if genome_version == "37":
        dbnsfp_version = "2.9.3"
    elif genome_version == "38":
        dbnsfp_version = "3.5"
    else:
        raise ValueError("Invalid genome_version: " + str(genome_version))

    kt = (
        hail_context
            .import_table(
                DBNSFP_FIELDS[dbnsfp_version]["source_path"],
                types=DBNSFP_FIELDS[dbnsfp_version]["field_types"],
                missing='.',
                min_partitions=10000)
            .drop(DBNSFP_FIELDS[dbnsfp_version]["fields_to_drop"])
            .rename(DBNSFP_FIELDS[dbnsfp_version]["rename_fields"])
            .filter("ref==alt", keep=False)
            .annotate("variant=Variant(chr, pos, ref, alt)")
            .key_by('variant')
            .drop(["chr", "pos", "ref", "alt"])

    )

    # create sites-only VDS
    dbnsfp_vds = VariantDataset.from_table(kt)

    output_path = DBNSFP_FIELDS[dbnsfp_version]["output_path"]

    dbnsfp_vds = dbnsfp_vds.annotate_global_expr('global.sourceFilePath = "{}"'.format(DBNSFP_FIELDS[dbnsfp_version]["source_path"]))
    dbnsfp_vds = dbnsfp_vds.annotate_global_expr('global.version = "{}"'.format(dbnsfp_version))

    write_vds(dbnsfp_vds, output_path)

    pprint(dbnsfp_vds.variant_schema)
