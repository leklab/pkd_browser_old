apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: es-data-persistent
  labels:
    component: elasticsearch
    role: data-persistent
spec:
  serviceName: elasticsearch-data
  replicas: 1
  template:
    metadata:
      labels:
        component: elasticsearch
        role: data
    spec:
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: es-data-persistent
        securityContext:
          privileged: true
          capabilities:
            add:
              - IPC_LOCK
        image: quay.io/pires/docker-elasticsearch-kubernetes:5.5.1
        imagePullPolicy: Always
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: "CLUSTER_NAME"
          value: "myesdb"
        - name: NODE_MASTER
          value: "false"
        - name: NODE_INGEST
          value: "false"
        - name: HTTP_ENABLE
          value: "true"
        - name: "ES_JAVA_OPTS"
          value: "-Xms7g -Xmx7g"
        - name: "SHARD_ALLOCATION_AWARENESS_ATTR"
          value: "/etc/hostname"
        - name: "SHARD_ALLOCATION_AWARENESS"
          value: "data_node_hostname"
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: storage
          mountPath: /data
      nodeSelector:
        cloud.google.com/gke-nodepool: "elasticpersistent"
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        volume.beta.kubernetes.io/storage-class: ssd-storage-class
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2000G
